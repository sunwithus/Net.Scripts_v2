@* ProcessingDB.razor *@

@page "/db-processing"
@rendermode InteractiveServer

@using Microsoft.EntityFrameworkCore
@using System.Text.Json
@using System.ComponentModel

@using MudBlazorWeb2.Components.Modules.Replicator
@using MudBlazorWeb2.Components.Modules.ProcessingDB

@inject SettingsService SettingsService


<PageTitle>💬 Process Oracle 🚀</PageTitle>

<MudContainer>
    <MudText Typo="Typo.h5">Обработка аудиоданных Oracle => 💬 + 🚀</MudText>
    <MudDivider />
    <br />

    <MudText Color="@colorTag" Style="display: flex; justify-content:space-between; align-items: center; padding-bottom: 7px;" Typo="Typo.body1">
        @if (settingsProcessing != null && settingsProcessing.ReplOraItems != null)
        {
            <MudText>
                Текущие настройки БД: <b>@(settingsProcessing?.ReplOraItems?.DataSource) => @(settingsProcessing?.ReplOraItems?.Scheme)</b>
            </MudText>
        }
        <OracleConnectionSettings nameConfigFile="@nameConfigFile" colorButton="@colorTag" OnSettingsChanged="LoadSettingsFromFile" />
    </MudText>

    <MudDivider />

    <MudText Style="display: flex; justify-content:space-between; align-items:start; padding-bottom: 7px;">

        <MudText>
            @* // Период *@
            <MudGrid Spacing="8" Justify="Justify.FlexStart">
                <MudItem>
                    <MudTextField T="DateTime" Format="yyyy-MM-ddTHH:mm:ss" Label="От даты:" InputType="InputType.DateTimeLocal" @bind-Value="ProcessSingleton.Instance.StartDate" />
                </MudItem>
                <MudItem>
                    <MudTextField T="DateTime" Format="yyyy-MM-ddTHH:mm:ss" Label="По дату:" InputType="InputType.DateTimeLocal" @bind-Value="ProcessSingleton.Instance.EndDate" />
                </MudItem>
            </MudGrid>
            @* // Повторный запуск *@
            <MudGrid Spacing="3" Justify="Justify.FlexStart">
                <MudItem>
                    <MudCheckBox @bind-Value="ProcessSingleton.Instance.IsCycle" Size="Size.Small" Label="С интервалом повторного запуска (мин.):" Color="@colorTag" />
                </MudItem>
                <MudItem>
                    <MudNumericField Style="width:50px; top:7px;" @bind-Value="ProcessSingleton.Instance.CycleInterval" Min="0" Step="1" Variant="Variant.Text" />
                </MudItem>
            </MudGrid>
        </MudText>

        <EditTemplateTaskToAi colorButton="@colorTag" OnApplyButtonClick="GetPreTextValue" />

    </MudText>

    <MudDivider />

    @* // Состояние выполнения *@
    <ProcessingStatus colorTag="@colorTag" preText="@preTextValue" modelName="@modelName" pathFileForAudio="@pathFileForAudio" schemeName="@settingsProcessing?.ReplOraString?.Scheme" conStringDBA="@settingsProcessing?.ReplOraString?.OracleDbConnectionString" />

</MudContainer>



@code {

    string modelName = "gemma2";
    string nameConfigFile = Path.Combine(AppContext.BaseDirectory, "settingsProcessing.json"); //Настройки подключения к БД
    string pathFileForAudio = @"C:\temp\temp_audio_from_db\";
    MudBlazor.Color colorTag = Color.Info;
    OraSettings? settingsProcessing = null;
    private string preTextValue = string.Empty;

    protected override async Task OnInitializedAsync()
    {

        settingsProcessing = new OraSettings ();
        await LoadSettingsFromFile();
        preTextValue = SettingsService.GetSetting("PreText");
        ProcessSingleton.Instance.PropertyChanged += Singleton_PropertyChanged;
    }

    private async Task LoadSettingsFromFile()
    {
        string json = await File.ReadAllTextAsync(nameConfigFile);
        settingsProcessing = JsonSerializer.Deserialize<OraSettings>(json);
    }

    private void GetPreTextValue() => preTextValue = SettingsService.GetSetting("PreText");

    private void Singleton_PropertyChanged(object sender, PropertyChangedEventArgs e) => InvokeAsync(StateHasChanged);



}